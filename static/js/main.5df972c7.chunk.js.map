{"version":3,"sources":["Question.js","User.js","App.js","index.js"],"names":["Question","state","isOpen","clickHandler","_this","setState","question","react_default","a","createElement","onClick","this","className","props","data","answer","React","Component","User","_ref","name","imgUrl","Fragment","src","alt","App","isCrtUser","signIn","window","gapi","auth2","getAuthInstance","then","googleUser","profile","getBasicProfile","getName","getImageUrl","console","log","getId","getGivenName","getFamilyName","getEmail","split","id_token","getAuthResponse","signOut","_onInit","_onError","err","load","init","client_id","process","_this$state","User_User","map","item","index","src_Question","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yNAiCeA,oNA9BbC,MAAQ,CACNC,QAAQ,KAEVC,aAAe,WACbC,EAAKC,SAAS,CACZH,QAASE,EAAKH,MAAMC,kFAItB,IAAMI,EACJC,EAAAC,EAAAC,cAAA,QAAMC,QAASC,KAAKR,aAAcS,UAAU,mBACzCD,KAAKE,MAAMC,KAAKR,UAGfS,EACJR,EAAAC,EAAAC,cAAA,QAAMC,QAASC,KAAKR,aAAcS,UAAU,oBACzCD,KAAKE,MAAMC,KAAKC,QAGrB,OACER,EAAAC,EAAAC,cAAA,OACEG,UAAWD,KAAKV,MAAMC,OAAS,4BAA8B,YAE5DI,EACAK,KAAKV,MAAMC,QAAUa,UAzBPC,IAAMC,mBCCvBC,EAAO,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,OACpB,OACEd,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACEf,EAAAC,EAAAC,cAAA,kDAAYW,EAAZ,KACAb,EAAAC,EAAAC,cAAA,OAAKc,IAAKF,EAAQG,IAAI,aC8EbC,6MA9EbxB,MAAQ,CACRyB,WAAW,EACXN,KAAM,KACNC,OAAQ,QAiBTM,OAAS,WACMC,OAAOC,KAAKC,MAAMC,kBAC1BJ,SAASK,KAAK,SAAAC,GAGnB,IAAMC,EAAUD,EAAWE,kBAE3B/B,EAAKC,SAAS,CACbe,KAAMc,EAAQE,UACdf,OAAQa,EAAQG,gBAEjBC,QAAQC,IAAI,OAASL,EAAQM,SAC7BF,QAAQC,IAAI,cAAgBL,EAAQE,WACpCE,QAAQC,IAAI,eAAiBL,EAAQO,gBACrCH,QAAQC,IAAI,gBAAkBL,EAAQQ,iBACtCJ,QAAQC,IAAI,cAAgBL,EAAQG,eACpCC,QAAQC,IAAI,UAAYL,EAAQS,YAKjB,cAFAT,EAAQS,WAAWC,MAAM,KAAK,IAG5CxC,EAAKC,SAAS,CACbqB,WAAW,IAKb,IAAMmB,EAAWZ,EAAWa,kBAAkBD,SAC9CP,QAAQC,IAAI,aAAeM,QAG7BE,QAAU,WACKnB,OAAOC,KAAKC,MAAMC,kBAC1BgB,UAAUf,KAAK,WACpB5B,EAAKC,SAAS,CACbe,KAAM,KACNC,OAAQ,6FAnDV,IAAM2B,EAAU,SAAAlB,GACfQ,QAAQC,IAAI,UAAWT,IAElBmB,EAAW,SAAAC,GAChBZ,QAAQC,IAAI,QAASW,IAEtBtB,OAAOC,KAAKsB,KAAK,QAAS,WACzBvB,OAAOC,KAAKC,MACVsB,KAAK,CACLC,UAAWC,6EAEXtB,KAAKgB,EAASC,sCA4CR,IAAAM,EACkB5C,KAAKV,MAAtBmB,EADDmC,EACCnC,KAAMC,EADPkC,EACOlC,OACd,OACEd,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACAf,EAAAC,EAAAC,cAAA,UAAQG,UAAU,QACjBQ,GAAQb,EAAAC,EAAAC,cAAA,UAAQC,QAASC,KAAKgB,QAAtB,YACPP,GAAQb,EAAAC,EAAAC,cAAA,UAAQC,QAASC,KAAKoC,SAAtB,aACR3B,GAAQb,EAAAC,EAAAC,cAAC+C,EAAD,CAAMpC,KAAMA,EAAMC,OAAQA,KAEjCV,KAAKV,MAAMyB,WAAaZ,EAAK2C,IAAI,SAACC,EAAMC,GAAP,OAChCpD,EAAAC,EAAAC,cAACmD,EAAD,CAAUC,IAAKF,EAAO7C,KAAM4C,cAxEpB1C,IAAMC,WCDxB6C,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5df972c7.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Question extends React.Component {\n  state = {\n    isOpen: false\n  };\n  clickHandler = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  render() {\n    const question = (\n      <span onClick={this.clickHandler} className=\"question__title\">\n        {this.props.data.question}\n      </span>\n    );\n    const answer = (\n      <span onClick={this.clickHandler} className=\"question__answer\">\n        {this.props.data.answer}\n      </span>\n    );\n    return (\n      <div\n        className={this.state.isOpen ? \"question question--opened\" : \"question\"}\n      >\n        {question}\n        {this.state.isOpen && answer}\n      </div>\n    );\n  }\n}\n\nexport default Question;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst User = ({ name, imgUrl }) => {\n  return (\n    <React.Fragment>\n      <p>Привет, {name}!</p>\n      <img src={imgUrl} alt=\"profle\" />\n    </React.Fragment>\n  )\n}\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n}\n\nexport { User }","import React from \"react\";\nimport \"./App.css\";\nimport Question from \"./Question.js\";\nimport data from \"./data.json\";\nimport { User } from './User'\n\nclass App extends React.Component {\n  state = {\n\t\tisCrtUser: false,\n\t\tname: null,\n\t\timgUrl: null\n\t};\n\tcomponentDidMount() {\n\t\tconst _onInit = auth2 => {\n\t\t\tconsole.log(\"init OK\", auth2);\n\t\t};\n\t\tconst _onError = err => {\n\t\t\tconsole.log(\"error\", err);\n\t\t};\n\t\twindow.gapi.load(\"auth2\", function() {\n\t\t\twindow.gapi.auth2\n\t\t\t\t.init({\n\t\t\t\t\tclient_id: process.env.REACT_APP_GOOGLE_CLIENT_ID\n\t\t\t\t})\n\t\t\t\t.then(_onInit, _onError);\n\t\t});\n\t}\n\tsignIn = () => {\n\t\tconst auth2 = window.gapi.auth2.getAuthInstance();\n\t\tauth2.signIn().then(googleUser => {\n\t\t\t// метод возвращает объект пользователя\n\t\t\t// где есть все необходимые нам поля\n\t\t\tconst profile = googleUser.getBasicProfile();\n\n\t\t\tthis.setState({\n\t\t\t\tname: profile.getName(),\n\t\t\t\timgUrl: profile.getImageUrl()\n\t\t\t});\n\t\t\tconsole.log(\"ID: \" + profile.getId()); // не посылайте подобную информацию напрямую, на ваш сервер!\n\t\t\tconsole.log(\"Full Name: \" + profile.getName());\n\t\t\tconsole.log(\"Given Name: \" + profile.getGivenName());\n\t\t\tconsole.log(\"Family Name: \" + profile.getFamilyName());\n\t\t\tconsole.log(\"Image URL: \" + profile.getImageUrl());\n\t\t\tconsole.log(\"Email: \" + profile.getEmail());\n\n\t\t\t// только для пользователей Creative\n\t\t\tconst domain = profile.getEmail().split(\"@\")[1];\n\n\t\t\tif (domain === \"crtweb.ru\") {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisCrtUser: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// токен\n\t\t\tconst id_token = googleUser.getAuthResponse().id_token;\n\t\t\tconsole.log(\"ID Token: \" + id_token);\n\t\t});\n\t};\n\tsignOut = () => {\n\t\tconst auth2 = window.gapi.auth2.getAuthInstance();\n\t\tauth2.signOut().then(() => {\n\t\t\tthis.setState({\n\t\t\t\tname: null,\n\t\t\t\timgUrl: null\n\t\t\t});\n\t\t});\n\t};\n  render() {\n    const { name, imgUrl } = this.state\n    return (\n      <React.Fragment>\n      <header className=\"app\">\n\t\t\t\t\t{!name && <button onClick={this.signIn}>Log in</button>}\n\t\t\t\t\t{!!name && <button onClick={this.signOut}>Log out</button>}\n\t\t\t\t\t{!!name && <User name={name} imgUrl={imgUrl} />}\n\t\t\t</header>\n        {this.state.isCrtUser && data.map((item, index) => (\n          <Question key={index} data={item} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}